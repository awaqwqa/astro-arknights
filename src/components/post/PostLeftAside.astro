---
import {getCollection} from "astro:content"
import type {PostNode} from "../common/FileTree"
import {BuildTree,ViewTree} from "../common/FileTree"
const base = import.meta.env.BASE_URL
const rootName = "posts"
// 这里可以改成获取页面传入的变量,如果没获取到变量再赋值docs
const allPost = await getCollection(rootName);

var PostTree : PostNode= BuildTree(allPost)

  
---
<ul id="docs-nav-list" class="w-[18rem] p-8 text-[18px] grow overflow-y-auto">
    <!--<li class="hover:text-ark-blue duration-300">-->
    <!--    <a target="_self" href={base + "docs/"}>开始</a>-->
    <!--</li>-->
    {allPost.map(({id, slug, body, collection, data}, index) =>
            <li class="hover:text-ark-blue line-clamp-3 duration-300">
                <!-- TODO: 按文件夹分层可折叠 -->
                <a target="_self" href={base + "docs/" + slug.split("/").map((item, index, array) => {
                    return item.includes("_") ? item.split("_").slice(1).join() : item
                }).join("/")}>
                    {data.title ?? id}
                </a>
            </li>
    )
    }
    
    <!-- {ViewTree(PostTree)} -->
    <ViewTree/ {...PostTree}>
    
</ul>